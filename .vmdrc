#
# VMDPrefs Theme File
#
# VMDPrefs was written by:
#    Christopher Mayne
#    Tajkhorshid Laboratory (http://csbmb.beckman.illinois.edu)
#    Beckman Institute for Advanced Science and Technology
#    University of Illinois at Urbana-Champaign
#
# VMDPrefs is currently maintained by:
#    Christopher Mayne | cmayne2@illinois.edu | http://www.ks.uiuc.edu/~mayne
#
# ------------------------------------------------------------------------------
# WARNING: Do not edit this file by hand!
#    VMDPrefs uses a very specific parsing scheme when reading theme files.
#    To avoid potentially corrupting the format, please use the GUI to make
#    any setting changes and write a new theme file.
# ------------------------------------------------------------------------------
#
# turn on lights 0 and 1
light 0 on
light 1 on
light 2 off
light 3 off

#Create material for gold
material add AOGold
material change ambient AOGold 0.750
material change diffuse AOGold 0.850
material change specular AOGold 0.25
material change shininess AOGold 0.250
material change opacity AOGold 1.000

# Create material for terminal nitrogen and carbon atoms
material add AOEnd
material change ambient AOEnd 0.000
material change diffuse AOEnd 0.850
material change specular AOEnd 0.200
material change shininess AOEnd 0.400
material change opacity AOEnd 0.900

# Create eggshell color for terminal C and H
#color add Eggshell
#color change rgb 90 90 90

# set display defaults
display projection orthographic
#display backgroundgradient on
color Display {Background} white
display depthcue off
display antialias on
display ambientocclusion off
# position the stage and axes
axes location off
stage location off
# position and turn on menus
menu main     move 445 125
menu display  move 395  30
menu graphics move 600 420
menu color    move 125  225
menu files    move 425  825
menu labels   move 125  525
menu render   move 125  525
menu tkcon    move 930 125

menu main      on
# menu display  on
menu graphics on
#menu color    on
#menu labels   on
#menu render   on
menu files    on
menu tkcon    on

global env 
# set env(VMDFULLSCREEN) 1 
display resize 1040 900
# start the scene a-rockin'
# rock y by 1
#take_picture reset

### Configuration for recording screenshots and movies with AO
user add key p {
light 0 on
light 1 on
light 2 on
light 3 on

menu render on
display ambientocclusion on
display shadows on
display aoambient 1.0
display aodirect 0.8
smoothrep top 3
}

# Selections for atom groups.
set ligand_backbone {all not nucleic and not resname 'Na+' 'Cl-' and not type Au}
set ammonium {type n4 nz}
set ammonium_hydrogen {type h4 hz hn}
set gold_atoms {type Au}
set sulfur_atoms {type ss}
set terminal_alcohol {type oh}
set ether {type os}
set nucleobases {nucleic not backbone and not name "H.*"}
set nucleic_back_not_near {nucleic backbone and not within 5 of type n4 nz c3 oh}
set nucleic_back_near {nucleic backbone and within 5 of type n4 nz c3 oh}

# Resolution of representations
#set ligand_backbone_res
#set end_group_res
#set sulfur_res
#set 


# Clear all existing configurations
proc clearallreps {molid} { 
	set numrep [molinfo top get numreps]
	for {set i 0} {$i < $numrep} {incr i} {mol delrep 0 $molid}
}

# Smooth frames for movie-making
proc smoothall {molid window} {
	set numrep [molinfo top get numreps]
	for {set i 0} {$i < $numrep} {incr i} {mol smoothrep $molid $i $window}
}

# Turn on selection/color updates for a given representation.
proc updaterep {molid} {
	set numrep [molinfo $ molid get numreps]
	mol selupdate $numrep $molid 1
	mol colupdate $numrep $molid 1
}

proc countcontacts {molid cutoff} {
	set molid top
	set mol [molinfo $molid]
	set sel [atomselect $mol {name OP1 and within $cutoff of type nz n4 nx}]
	set frames [molinfo $mol get numframes]
	set fp [open "contact_count.dat" w ]
	for {set i 0} {$i < $frames} {incr i} {
		$sel frame $i
		$sel update
		set n [$sel num]
		puts $fp "$i $n"
	}
	$sel delete
	close $fp
	unset mol sel frames fp i n
}

proc betweenvector {sel1 sel2} {
	set vec1 [measure center $sel1]
	set vec2 [measure center $sel2]
	set bwvector [vecsub $vec1 $vec2]
	return $bwvector
}

#proc pairwisedist {resgroup1 resgroup2} {
#	foreach resnum1 [$resgroup1]

# Built-in command is [measure center $selection [weight mass]]
proc geomcenter {selection} {
        # set the geometrical center to 0
        set gc [veczero]
        # [$selection get {x y z}] returns a list of {x y z} 
        #    values (one per atoms) so get each term one by one
        foreach coord [$selection get {x y z}] {
           # sum up the coordinates
           set gc [vecadd $gc $coord]
        }
        # and scale by the inverse of the number of atoms
        return [vecscale [expr 1.0 /[$selection num]] $gc]
}

proc showAtomAtCenter {selection_criteria} {
    set sel [atomselect top $selection_criteria]
    set com [measure center $sel]
    set x [lindex $com 0]
    set y [lindex $com 1]
    set z [lindex $com 2]
    set center_atom "sqr(x-$x) + sqr(y-$y) + sqr(z - $z) < 5"
    
    # clear screen
    puts "Center atom selection: '$center_atom' "
    clearallreps top
    mol selection $center_atom
    mol representation VDW 1.000000 20.000000
    mol color Name
    mol addrep top

    set sel [atomselect top $center_atom]
    set ids [$sel get index]
    puts "Atom indices: $ids"
}

proc nucleicrdf {} {
	set center [ geom_center [atomselect {type Au}]]
	set mask2 [atomselect top "name OP1"]
	set rdf [measure gofr $center $mask2 delta 0.01 rmax 18.0 usepbc 1]
	#set frames [molinfo $mol get numframes]
	#selupdate 0 first 0 last [expr {$frames-1}] step 1]
}
	
# Increase resolution of rep
#proc increase_res {molid resolution 

# Averaging of trajectory with 3-frame window
user add key 5 {
	smoothall top 5
}

# Periodic image hotkeys.
user add key 6 {
	set numrep [molinfo top get numreps]
	for {set i 0} {$i < $numrep} {incr i} {mol showperiodic top $i xy
	mol numperiodic top $i 1}
}
user add key 7 {
	set numrep [molinfo top get numreps]
	for {set i 0} {$i < $numrep} {incr i} {mol showperiodic top $i z
	mol numperiodic top $i 1}
}
user add key 8 {
	set numrep [molinfo top get numreps]
	for {set i 0} {$i < $numrep} {incr i} {mol showperiodic top $i xyz
	mol numperiodic top $i 1}
}

# Increase resolution of all reps.
user add key h {
	set numrep [molinfo top get numreps]
	for {set i 0} {$i < $numrep} {incr i} {mol smoothrep $molid $i}
}

user add key v {
### vdW for All Atoms
	clearallreps top
    mol selection all
    mol representation VDW 1.000000 20.000000
    mol color Name
    mol material Opaque
    mol addrep top
    
 
 }

user add key b {
# Nanoparticle-nucleic with AO rendering (for use with Tachyon-OSprey engine)
#     set viewplist {}
#     set fixedlist {}
	set spline_style 1

	clearallreps top
	draw delete all
	
    ### Gold Atoms
    mol selection $gold_atoms
    mol representation VDW 1.000000 15.000000
    mol color ColorID 32
    mol material AOGold
    mol addrep top
    
    # Sulfur
    mol selection $sulfur_atoms
    mol representation CPK 1.50 1.2000000 50 25
    mol color ColorID 6
    mol material AOShiny
    mol addrep top
    
    # Nitrogen atoms
    mol selection $ammonium
    mol representation CPK 3.5 1.2000000 50 25
    mol color ColorID 23
    mol material AOEnd
    mol addrep top
       
    mol selection $terminal_alcohol
    mol representation CPK 3.5 1.2000000 50 25
    mol color ColorID 1
    mol material AOEnd
    mol addrep top
    
	# Oxygen in PEG backbone
    mol selection {type os}
    mol representation CPK 1.0 1.2000000 50 25
    mol color ColorID 1
    mol material AOEnd
    mol addrep top
    
    mol selection $ligand_backbone
    mol representation Licorice 0.150000 50.000000 50.000000
    mol color ColorID 2
    mol material Translucent
    mol addrep top    
    
	mol selection {type ho}
    mol representation CPK 2.0 0.0 50 25
    mol color ColorID 8
    mol material AOEnd
    mol addrep top
           
    # Nucleic acids
    mol selection $nucleobases
    mol representation Licorice 0.300000 50.000000 50.000000
    mol color ColorID 6
    mol material AOShiny
    mol addrep top    

    mol selection $nucleobases    
    mol representation NewRibbons 0.10 50 1.06 $spline_style
    mol color ColorID 6
    mol material AOShiny
    mol addrep top
    
    # Highlight backbone in contact with ligands.
	mol selection $nucleic_back_not_near
	mol representation NewRibbons 2.05 10 1.06 $spline_style
    mol color ColorID 6
    mol material AOEdgy
    mol addrep top
	mol selupdate 9 top 1
	mol colupdate 9 top 1
	
    mol selection $nucleic_back_near
    mol representation NewRibbons 2.05 50 1.06 $spline_style
    mol color ColorID 30
    mol material AOEdgy
    mol addrep top
	mol selupdate 10 top 1
	mol colupdate 10 top 1
		
	# Terminal Methyls
    mol selection {name C99}
    mol representation CPK 3.5 1.2000000 50 25
    mol color ColorID 8
    mol material AOEnd
    mol addrep top
    
}


# Configuration for visualizing surface charge distribution on nanoparticles
user add key s {
    #Apply preselected graphical representation
#     set viewplist {}
#     set fixedlist {}
	clearallreps top
	mol selection $ammonium_hydrogen
    mol representation Surf 50.0000
    mol color Charge
    mol material AOChalky
    mol addrep top
}

# *** Visualize DNA with backbone and visible nucleobases
user add key w {
    #Apply preselected graphical representation
#     set viewplist {}
#     set fixedlist {}
	clearallreps top
    mol selection {fragment 0}
    mol representation NewRibbons 2.05 10 1.06 1
    mol color ColorID 3
    mol material BrushedMetal
    mol addrep top
    
    mol selection {fragment 1}
    mol representation NewRibbons 2.05 10 1.06 1
    mol color ColorID 20
    mol material BrushedMetal
    mol addrep top

    mol selection {fragment 0 and nucleic not backbone and not name "H.*"}
    mol representation Licorice 0.3 10.0 10.0
    mol color ColorID 3
    mol material Translucent
    mol addrep top

    mol selection {fragment 1 and nucleic not backbone and not name "H.*"}
    mol representation Licorice 0.3 10.0 10.0
    mol color ColorID 20
    mol material Translucent
    mol addrep top
}


user add key o {
# Nanoparticle-Nucleic for opaque, non-AO rendering (ie. viewing and snapshot)
#     set viewplist {}
#     set fixedlist {}
	set spline_style 1

	clearallreps top
	draw delete all
	
    ### Gold Atoms
    mol selection $gold_atoms
    mol representation VDW 1.000000 15.000000
    mol color ColorID 32
    mol material Edgy
    mol addrep top
    
    # Sulfur
    mol selection $sulfur_atoms
    mol representation CPK 1.50 1.2000000 50 25
    mol color ColorID 6
    mol material EdgyShiny
    mol addrep top
    
    # Nitrogen atoms
    mol selection $ammonium
    mol representation CPK 3.5 1.2000000 50 25
    mol color ColorID 23
    mol material EdgyShiny
    mol addrep top
 
	# Terminal methyl group
    mol selection {name C1}
    mol representation CPK 3.5 1.2000000 50 25
    mol color ColorID 8
    mol material EdgyShiny
    mol addrep top
       
    # Terminal Oxygen
    mol selection {type oh}
    mol representation CPK 3.5 1.2000000 50 25
    mol color ColorID 1
    mol material EdgyShiny
    mol addrep top
    
    # Oxygen in PEG backbone
    mol selection {type os}
    mol representation CPK 1.0 1.2000000 50 25
    mol color ColorID 1
    mol material EdgyShiny
    mol addrep top
    
    # Ligand backbone
    mol selection $ligand_backbone
    mol representation Licorice 0.150000 50.000000 50.000000
    mol color ColorID 2
    mol material Translucent
    mol addrep top    
    
    # Hydrogen on terminal hydroxyl
	mol selection {type ho}
    mol representation CPK 2.0 0.0 50 25
    mol color ColorID 8
    mol material EdgyShiny
    mol addrep top
           
    # Nucleic acids
    mol selection $nucleobases
    mol representation Licorice 0.300000 50.000000 50.000000
    mol color ColorID 6
    mol material EdgyShiny
    mol addrep top    

    mol selection $nucleobases    
    mol representation NewRibbons 0.10 50 1.06 $spline_style
    mol color ColorID 6
    mol material EdgyShiny
    mol addrep top
    
    # Highlight backbone in contact with ligands.
	mol selection $nucleic_back_not_near
	mol representation NewRibbons 2.05 10 1.06 $spline_style
    mol color ColorID 6
    mol material EdgyShiny
	mol addrep top
	mol selupdate 10 top 1
	mol colupdate 10 top 1
	
    mol selection $nucleic_back_near
    mol representation NewRibbons 2.05 50 1.06 $spline_style
    mol color ColorID 30
    mol material EdgyShiny
    mol addrep top
	mol selupdate 11 top 1
	mol colupdate 11 top 1
	    
    #draw pbcbox

}

# Center topology (not by mass)
user add key c {
	set num_frames [molinfo top get numframes]
	set sel_all [atomselect top "all"]
	set sel_center [atomselect top "fragment 0"]
	for {set i 0} {$i < $num_frames} {incr i 1} {
	  animate goto $i
	  $sel_all moveby [vecinvert [measure center $sel_center]]
	}
	$sel_all delete
	$sel_center delete
}
user add key d {
    #Apply preselected graphical representation
#     set viewplist {}
#     set fixedlist {}
    mol delrep 0 top
    mol representation Licorice 0.500000 10.000000 10.000000
    mol color ColorID 17
    mol selection {name P O5'}
    mol material Opaque
    mol addrep top

    mol representation Licorice 0.500000 10.000000 10.000000    
    mol color ColorID 19
    mol selection {name O5' C5'}
    mol material Opaque
    mol addrep top

    mol representation Licorice 0.500000 10.000000 10.000000
    mol color ColorID 9
    mol selection {name C5' C4'}
    mol material Opaque
    mol addrep top
    
    mol representation Licorice 0.500000 10.000000 10.000000
    mol color ColorID 23
    mol selection {name C4' C3'}
    mol material Opaque
    mol addrep top

    mol representation Licorice 0.500000 10.000000 10.000000
    mol color ColorID 11
    mol selection {name C3' O3'}
    mol material Opaque
    mol addrep top

    mol representation Licorice 0.500000 10.000000 10.000000
    mol color ColorID 15
    mol selection {name O3' P}
    mol material Opaque
    mol addrep top

    mol representation NewRibbons 0.300000 10.000000 3.000000 0
    mol color ColorID 6
    mol selection {nucleic not backbone}
    mol material Opaque
    mol addrep top
}

user add key e {
    #Apply preselected graphical representation
#     set viewplist {}
#     set fixedlist {}

	clearallreps top
    mol selection {nucleic}
    mol representation Licorice 0.300000 10.000000 10.000000
    mol color ColorID 30
    mol material AOChalky
    mol addrep top
    
    mol representation VDW 1.000000 12.000000
    mol color Charge
    mol selection {all not nucleic}
    mol material EdgyShiny
    mol addrep top

    mol representation NewRibbons 2.05 10 1.06 0
    mol color ColorID 30
    mol selection {nucleic backbone}
    mol material AOChalky
    mol addrep top

    mol selection {fragment 1 and nucleic not backbone and not name "H.*"}
    mol representation Licorice 0.3 10.0 10.0
    mol color ColorID 20
    mol material Translucent
    mol addrep top
}

proc take_picture {args} {
  global take_picture
  set res_x 4096
  set res_y 2160
  # when called with no parameter, render the image
  if {$args == {}} {
    set f [format $take_picture(format) $take_picture(frame)]
    # take 1 out of every modulo images
    if { [expr $take_picture(frame) % $take_picture(modulo)] == 0 } {
      render $take_picture(method) -res $res_x $res_y $f
      # call any unix command, if specified
      if { $take_picture(exec) != {} } {
        set f [format $take_picture(exec) $f $f $f $f $f $f $f $f $f $f]
        eval "exec $f"
       }
    }
    # increase the count by one
    incr take_picture(frame)
    return
  }
  lassign $args arg1 arg2
  # reset the options to their initial stat
  # (remember to delete the files yourself
  if {$arg1 == "reset"} {
    set take_picture(frame)  0
    set take_picture(format) "./animate.%04d.tga"
    set take_picture(method) TachyonLOSPRayInternal
    set take_picture(modulo) 1
    set take_picture(exec)    {}
    return
  }
  # set one of the parameters
  if [info exists take_picture($arg1)] {
    if { [llength $args] == 1} {
      return "$arg1 is $take_picture($arg1)"
    }
    set take_picture($arg1) $arg2
    return
  }
  # otherwise, there was an error
  error {take_picture: [ | reset | frame | format  | \
  method  | modulo ]}
}
# to complete the initialization, this must be the first function
# called.  Do so automatically.


proc take_high_res_frame {picname} {
	#set TACHYONPATH '/home/mdmannin/vmd-1.9.3/lib/tachyon/tachyon_LINUXAMD64'
	render TachyonLOSPRayInternal $picname
}

proc make_trajectory_movie_files {} {
	set num [molinfo top get numframes]
	# loop through the frames
	for {set i 0} {$i < $num} {incr i} {
		# go to the given frame
		animate goto $i
                # force display update
                display update 
		# take the picture
		#take_picture reset
        render TachyonLOSPRayInternal $i.tga
        }
}
